{"version":3,"sources":["pages/Game/Card/styles.module.css","pages/Game/styles.module.css","pages/InitGame/styles.module.css","components/TextInput/styles.module.css","Template/styles.module.css","components/Button/styles.module.css","configs/index.js","Template/index.js","redux/game/index.js","components/Button/index.js","components/TextInput/index.js","pages/InitGame/index.js","utils/cards.js","pages/Game/Card/index.js","pages/Game/hooks/useGame.js","pages/Game/helpers.js","pages/Game/index.js","pages/Result/index.js","Routes/index.js","App.js","redux/store.js","index.js","pages/Result/styles.module.css"],"names":["module","exports","MAIN","GAME","RESULT","LOOSE","WIN","Template","memo","children","className","styles","mainSectionWrapper","displayName","propTypes","PropTypes","oneOfType","arrayOf","node","isRequired","initialState","userName","localStorage","getItem","scores","JSON","parse","lastScore","gameStatus","gameSlice","createSlice","name","reducers","setUsername","state","payload","addScores","addLastScore","setGameStatus","reset","actions","Button","props","onClick","disabled","restProps","clsx","button","defaultProps","Input","placeholder","value","onChange","inputContainer","input","type","inputPlaceholder","InitGame","storeUsername","useSelector","game","useState","username","dispatch","useDispatch","push","useHistory","ROUTES","CONFIG","handleChange","useCallback","target","handleClick","e","preventDefault","setUsernameAction","setItem","mainContainer","onSubmit","mainContainer_form","mainContainer_form_title","mainContainer_form_subtitle","mainContainer_form_actionWrapper","length","shuffle","array","randomIndex","currentIndex","Math","floor","random","getRandomIntInclusive","min","max","ceil","generateRandomValue","yMin","yMax","xMin","xMax","y","x","getRandomCard","cards","randomCard","includes","generateCards","randomCardsValues","Array","fill","havePair","isOpen","map","item","id","Card","showCards","cardDimension","height","width","split","cardContainer","opened","cardContainer_frontWrapper","cardContainer_front","style","backgroundSize","backgroundPosition","cardContainer_backWrapper","cardContainer_back","cardContainer_back_havePair","useGame","score","setScore","originalArray","copyOfOriginal","stringify","generateCardsWithPairs","setCards","GAME_STATUSES","isFinish","useMemo","openedCards","filter","Boolean","some","openedCard","find","getFilteredScores","status","allScores","slice","sort","a","b","handleFinishGame","every","filteredScores","handleCardClick","gameHandlerInit","cardId","cardValue","prevState","restData","prevValue","handleGame","useEffect","Game","setShowCards","ref","useRef","setCardDimensions","handleToggleCards","handleResize","cardContainerRef","current","querySelector","getBoundingClientRect","cardResizeHandler","window","addEventListener","removeEventListener","gameContainer","gameContainer_gameInfo","gameContainer_gameInfo_titleContainer","gameContainer_gameInfo_userInfo","gameContainer_actionsWrapper","gameContainer_cardsContainer","card","Result","handleRepeatClick","handleResetClick","removeItem","scoresContainer","scoresContainer_wrapper","scoresContainer_mainTitle","scoresContainer_lastGameInfoContainer","scoresContainer_lastGameInfoContainer_title","scoresContainer_lastGameInfoContainer_info","table","tableRow","tableCell","scoresContainer_lastGameInfoContainer_actions","Routes","path","exact","App","store","configureStore","reducer","gameReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c78c608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"styles_cardContainer__1zRJN\",\"opened\":\"styles_opened__QAPOV\",\"havePair\":\"styles_havePair__2O88Y\",\"cardContainer_back_havePair\":\"styles_cardContainer_back_havePair__3PZ5y\",\"cardContainer_frontWrapper\":\"styles_cardContainer_frontWrapper__30VLP\",\"cardContainer_backWrapper\":\"styles_cardContainer_backWrapper__bJZlD\",\"cardContainer_front\":\"styles_cardContainer_front__3BTRM\",\"cardContainer_back\":\"styles_cardContainer_back__1EpKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"styles_gameContainer__Jg5Zf\",\"gameContainer_gameInfo_titleContainer\":\"styles_gameContainer_gameInfo_titleContainer__1ab5g\",\"gameContainer_gameInfo\":\"styles_gameContainer_gameInfo__2mbQ-\",\"gameContainer_gameInfo_userInfo\":\"styles_gameContainer_gameInfo_userInfo__XCQ9h\",\"gameContainer_actionsWrapper\":\"styles_gameContainer_actionsWrapper__Afwmb\",\"gameContainer_cardsContainer\":\"styles_gameContainer_cardsContainer__wpOp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"styles_mainContainer__xiK3P\",\"mainContainer_form\":\"styles_mainContainer_form__Hmo4u\",\"mainContainer_form_title\":\"styles_mainContainer_form_title__kZTLC\",\"mainContainer_form_subtitle\":\"styles_mainContainer_form_subtitle__1bLWt\",\"mainContainer_form_actionWrapper\":\"styles_mainContainer_form_actionWrapper__16o5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__2HHjZ\",\"input\":\"styles_input__2Ny6U\",\"inputPlaceholder\":\"styles_inputPlaceholder__lSYpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSectionWrapper\":\"styles_mainSectionWrapper__2PK8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3SsyT\"};","export default {\n  ROUTES: {\n    MAIN: '/',\n    GAME: '/game',\n    RESULT: '/result',\n  },\n  GAME_STATUSES: {\n    LOOSE: 'Loose',\n    WIN: 'WIN',\n  },\n};\n","import React, { memo } from 'react';\nimport styles from './styles.module.css';\nimport PropTypes from 'prop-types';\n\nconst Template = memo(({ children }) => (\n  <section className={styles.mainSectionWrapper}>{children}</section>\n));\n\nTemplate.displayName = 'Template';\n\nTemplate.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Template;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  userName: localStorage.getItem('username') || '',\n  scores: JSON.parse(localStorage.getItem('allScores')) || [],\n  lastScore: 0,\n  gameStatus: '',\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setUsername: (state, { payload }) => {\n      state.userName = payload;\n    },\n    addScores: (state, { payload }) => {\n      state.scores = payload;\n    },\n    addLastScore: (state, { payload }) => {\n      state.lastScore = payload;\n    },\n    setGameStatus: (state, { payload }) => {\n      state.gameStatus = payload;\n    },\n    reset: state => {\n      state.userName = '';\n      state.lastScore = 0;\n      state.gameStatus = '';\n    },\n  },\n});\n\nexport const { setUsername, addScores, addLastScore, setGameStatus, reset } =\n  gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styles from './styles.module.css';\n\nconst Button = memo(props => {\n  const { children, onClick, className, disabled, ...restProps } = props;\n\n  return (\n    <button\n      className={clsx(styles.button, className)}\n      onClick={onClick}\n      disabled={disabled}\n      {...restProps}\n    >\n      {children}\n    </button>\n  );\n});\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: null,\n  disabled: false,\n  onClick: () => {},\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst Input = memo(props => {\n  const { placeholder, value, onChange } = props;\n\n  return (\n    <label className={styles.inputContainer}>\n      <input\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\" \"\n      />\n      <span className={styles.inputPlaceholder}>{placeholder}</span>\n    </label>\n  );\n});\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React, { memo, useCallback, useState } from 'react';\nimport Template from '../../Template';\nimport styles from './styles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUsername as setUsernameAction } from 'redux/game';\nimport { useHistory } from 'react-router';\nimport CONFIG from 'configs/index';\nimport Button from 'components/Button';\nimport Input from 'components/TextInput';\n\nconst InitGame = memo(() => {\n  const { userName: storeUsername } = useSelector(({ game }) => game);\n\n  const [username, setUsername] = useState(storeUsername);\n\n  const dispatch = useDispatch();\n\n  const { push } = useHistory();\n\n  const { ROUTES } = CONFIG;\n\n  const handleChange = useCallback(\n    ({ target: { value } }) => setUsername(value),\n    []\n  );\n\n  const handleClick = useCallback(\n    e => {\n      e.preventDefault();\n\n      dispatch(setUsernameAction(username));\n      localStorage.setItem('username', username);\n      push(ROUTES.GAME);\n    },\n    [ROUTES.GAME, dispatch, push, username]\n  );\n\n  return (\n    <Template>\n      <div className={styles.mainContainer}>\n        <form onSubmit={handleClick} className={styles.mainContainer_form}>\n          <h1 className={styles.mainContainer_form_title}>Find Pairs</h1>\n          <p className={styles.mainContainer_form_subtitle}>\n            You need to find 12 pairs of cards to win this game\n          </p>\n          <Input\n            onChange={handleChange}\n            value={username}\n            placeholder=\"Enter your username\"\n          />\n          <div className={styles.mainContainer_form_actionWrapper}>\n            <Button type=\"submit\" disabled={!username.length}>\n              start game\n            </Button>\n          </div>\n        </form>\n      </div>\n    </Template>\n  );\n});\n\nInitGame.displayName = 'InitGame';\n\nexport default InitGame;\n","const shuffle = array => {\n  let currentIndex = array.length,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n};\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\n};\n\nconst generateRandomValue = ({ yMin = 0, yMax = 4, xMin = 0, xMax = 12 }) => {\n  const y = getRandomIntInclusive(yMin, yMax);\n  let x = getRandomIntInclusive(xMin, xMax);\n\n  if (y === 4) {\n    x = getRandomIntInclusive(0, 1);\n  }\n\n  return `${x},${y}`;\n};\n\nconst getRandomCard = (length = 12) => {\n  let cards = [];\n\n  while (length) {\n    let randomCard = generateRandomValue({});\n\n    if (!cards.includes(randomCard)) {\n      cards = [...cards, randomCard];\n      length--;\n    }\n  }\n\n  return cards;\n};\n\nconst generateCards = (length = 12) => {\n  const randomCardsValues = getRandomCard();\n\n  return Array(length)\n    .fill({ havePair: false, isOpen: false, value: '' })\n    .map((item, id) => ({ ...item, id, value: randomCardsValues[id] }));\n};\n\nexport const generateCardsWithPairs = (length = 12) => {\n  const originalArray = generateCards(length);\n  const copyOfOriginal = JSON.parse(JSON.stringify(originalArray));\n\n  return shuffle(\n    [...originalArray, ...copyOfOriginal].map((item, id) => ({ ...item, id }))\n  );\n};\n\nexport const cardResizeHandler = ({\n  cardContainerRef = null,\n  setCardDimensions: setCardDimensions = () => {},\n}) => {\n  if (cardContainerRef.current) {\n    const { current: cardContainer } = cardContainerRef;\n\n    const card = cardContainer.querySelector('.cardContainer');\n\n    const { width, height } = card.getBoundingClientRect();\n\n    setCardDimensions({ width, height });\n  }\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\nimport clsx from 'clsx';\n\nconst Card = memo(props => {\n  const {\n    havePair,\n    isOpen,\n    value,\n    id,\n    onClick,\n    showCards,\n    cardDimension: { height, width },\n  } = props;\n\n  const handleClick = () => onClick({ id, value, isOpen });\n\n  const [x, y] = value.split(',');\n\n  return (\n    <div\n      className={clsx(\n        styles.cardContainer,\n        isOpen && styles.opened,\n        havePair && styles.havePair\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.cardContainer_frontWrapper}>\n        <div\n          className={clsx(styles.cardContainer_front, 'cardContainer')}\n          style={{\n            backgroundSize: `calc(${width}px * 13) calc(${height}px * 5)`,\n            backgroundPosition: `calc(${width}px * -${\n              showCards ? x : 2\n            }) calc(${height}px * -${showCards ? y : 4})`,\n          }}\n        />\n      </div>\n      <div className={styles.cardContainer_backWrapper}>\n        <div\n          className={styles.cardContainer_back}\n          style={{\n            backgroundSize: `calc(${width}px * 13) calc(${height}px * 5)`,\n            backgroundPosition: `calc(${width}px * -${x}) calc(${height}px * -${y})`,\n          }}\n        >\n          <div className={styles.cardContainer_back_havePair}>\n            <span>Have pair</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nCard.displayName = 'Card';\n\nCard.propTypes = {\n  havePair: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  cardDimension: PropTypes.shape({\n    height: PropTypes.number,\n    width: PropTypes.number,\n  }).isRequired,\n  showCards: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport CONFIG from 'configs';\nimport { generateCardsWithPairs } from 'utils/cards';\nimport { handleGame } from '../helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGameStatus, addLastScore, addScores } from 'redux/game';\nimport { useHistory } from 'react-router';\n\nexport const useGame = () => {\n  const [score, setScore] = useState(0);\n  const [cards, setCards] = useState(generateCardsWithPairs());\n\n  const { scores, userName } = useSelector(({ game }) => game);\n\n  const { GAME_STATUSES, ROUTES } = CONFIG;\n\n  const { push } = useHistory();\n\n  const dispatch = useDispatch();\n\n  const isFinish = useMemo(() => {\n    const openedCards = cards.filter(({ isOpen }) => isOpen);\n\n    return Boolean(\n      (openedCards.length % 2 === 0 &&\n        openedCards.some(({ havePair }) => !havePair)) ||\n        openedCards.length === cards.length\n    );\n  }, [cards]);\n\n  const openedCard = useMemo(\n    () =>\n      cards.find(\n        ({ havePair, isOpen }) => havePair === false && isOpen === true\n      ),\n    [cards]\n  );\n\n  const getFilteredScores = useCallback(\n    status => {\n      let allScores = scores;\n      if (scores.length === 10) {\n        allScores = scores.slice(0, -1);\n      }\n\n      return [...allScores, { score, userName, gameStatus: status }]\n        .map((item, id) => ({\n          ...item,\n          id,\n        }))\n        .sort((a, b) => b.score - a.score);\n    },\n    [scores, score, userName]\n  );\n\n  const handleFinishGame = useCallback(() => {\n    let status = GAME_STATUSES.LOOSE;\n\n    if (cards.every(({ havePair }) => havePair)) {\n      status = GAME_STATUSES.WIN;\n    }\n\n    const filteredScores = getFilteredScores(status);\n\n    localStorage.setItem('allScores', JSON.stringify(filteredScores));\n\n    dispatch(setGameStatus(status));\n    dispatch(addLastScore(score));\n    dispatch(addScores(filteredScores));\n\n    push(ROUTES.RESULT);\n  }, [\n    GAME_STATUSES.LOOSE,\n    GAME_STATUSES.WIN,\n    ROUTES.RESULT,\n    cards,\n    dispatch,\n    getFilteredScores,\n    push,\n    score,\n  ]);\n\n  const handleCardClick = useCallback(\n    ({ id, value, isOpen }) => {\n      if (isOpen) return;\n\n      const gameHandlerInit = handleGame({\n        cardId: id,\n        cardValue: value,\n        setScore,\n        openedCard,\n      });\n\n      setCards(gameHandlerInit);\n    },\n    [openedCard]\n  );\n\n  useEffect(() => {\n    if (isFinish) {\n      handleFinishGame();\n    }\n  }, [handleFinishGame, isFinish]);\n\n  return { handleCardClick, cards, score };\n};\n","export const handleGame =\n  ({ cardId, cardValue, setScore, openedCard }) =>\n  prevState =>\n    prevState.map(({ id, value, ...restData }) => {\n      if (openedCard && openedCard.value === cardValue && id === cardId) {\n        setScore(prevValue => prevValue + 1);\n      }\n\n      if (\n        openedCard &&\n        openedCard.value === cardValue &&\n        (id === cardId || openedCard.id === id)\n      ) {\n        return {\n          id,\n          value,\n          ...restData,\n          isOpen: true,\n          havePair: true,\n        };\n      }\n\n      if (id === cardId) {\n        return {\n          id,\n          value,\n          ...restData,\n          isOpen: true,\n        };\n      }\n\n      return { id, value, ...restData };\n    });\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './styles.module.css';\nimport { useSelector } from 'react-redux';\nimport Template from 'Template/index';\nimport { useHistory } from 'react-router';\nimport CONFIG from 'configs';\nimport { cardResizeHandler } from 'utils/cards';\nimport Card from './Card';\nimport { useGame } from './hooks/useGame';\nimport Button from 'components/Button';\n\nconst Game = memo(() => {\n  const { userName } = useSelector(({ game }) => game);\n\n  const [showCards, setShowCards] = useState(false);\n\n  const ref = useRef();\n\n  const { push } = useHistory();\n\n  const { ROUTES } = CONFIG;\n\n  const [cardDimension, setCardDimensions] = useState({ height: 0, width: 0 });\n\n  const { handleCardClick, cards, score } = useGame();\n\n  const handleToggleCards = useCallback(\n    () => setShowCards(prevValue => !prevValue),\n    []\n  );\n\n  const renderCard = card => (\n    <Card\n      key={card.id}\n      {...card}\n      onClick={handleCardClick}\n      cardDimension={cardDimension}\n      showCards={showCards}\n    />\n  );\n\n  const handleResize = () =>\n    cardResizeHandler({ cardContainerRef: ref, setCardDimensions });\n\n  useEffect(() => {\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  if (!userName.length) {\n    push(ROUTES.MAIN);\n    return null;\n  }\n\n  return (\n    <Template>\n      <div className={styles.gameContainer}>\n        <div className={styles.gameContainer_gameInfo}>\n          <div className={styles.gameContainer_gameInfo_titleContainer}>\n            <h1>Find Pairs</h1>\n          </div>\n          <p>You need to find 12 pairs of cards to win this game</p>\n          <div className={styles.gameContainer_gameInfo_userInfo}>\n            <span>USER NAME: {userName}</span>\n            <span>SCORE: {score}</span>\n          </div>\n        </div>\n        <div className={styles.gameContainer_actionsWrapper}>\n          <Button onClick={handleToggleCards}>show cards</Button>\n        </div>\n        <div className={styles.gameContainer_cardsContainer} ref={ref}>\n          {cards.map(renderCard)}\n        </div>\n      </div>\n    </Template>\n  );\n});\n\nGame.displayName = 'Game';\n\nexport default Game;\n","import React, { memo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Template from 'Template';\nimport styles from './styles.module.css';\nimport { useHistory } from 'react-router';\nimport CONFIG from 'configs';\nimport { reset } from 'redux/game';\nimport Button from 'components/Button';\n\nconst Result = memo(() => {\n  const { userName, scores, lastScore, gameStatus } = useSelector(\n    ({ game }) => game\n  );\n\n  const dispatch = useDispatch();\n\n  const { push } = useHistory();\n\n  const { ROUTES } = CONFIG;\n\n  const handleRepeatClick = useCallback(() => {\n    push(ROUTES.GAME);\n  }, [ROUTES.GAME, push]);\n\n  const handleResetClick = useCallback(() => {\n    localStorage.removeItem('username');\n\n    dispatch(reset());\n\n    push(ROUTES.MAIN);\n  }, [ROUTES.MAIN, dispatch, push]);\n\n  return (\n    <Template>\n      <section className={styles.scoresContainer}>\n        <div className={styles.scoresContainer_wrapper}>\n          <h1 className={styles.scoresContainer_mainTitle}>Scores table</h1>\n          {Boolean(gameStatus.length) && (\n            <div className={styles.scoresContainer_lastGameInfoContainer}>\n              <h2\n                className={styles.scoresContainer_lastGameInfoContainer_title}\n              >\n                {gameStatus}\n              </h2>\n              <div\n                className={styles.scoresContainer_lastGameInfoContainer_info}\n              >\n                <p>Username: {userName}</p>\n                <p>score: {lastScore}</p>\n              </div>\n            </div>\n          )}\n          <div className={styles.table}>\n            {scores.map(({ score, userName, gameStatus, id }) => (\n              <div className={styles.tableRow} key={id}>\n                <div className={styles.tableCell}>{userName}</div>\n                <div className={styles.tableCell}>{gameStatus}</div>\n                <div className={styles.tableCell}>{score}</div>\n              </div>\n            ))}\n          </div>\n          <div className={styles.scoresContainer_lastGameInfoContainer_actions}>\n            <Button onClick={handleResetClick}>Reset</Button>\n            <Button onClick={handleRepeatClick}>Repeat</Button>\n          </div>\n        </div>\n      </section>\n    </Template>\n  );\n});\n\nResult.displayName = 'Result';\n\nexport default Result;\n","import React, { memo } from 'react';\nimport CONFIG from 'configs/index';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport InitGame from 'pages/InitGame';\nimport Game from 'pages/Game';\nimport Result from 'pages/Result';\n\nconst Routes = memo(() => {\n  const { ROUTES } = CONFIG;\n\n  return (\n    <Router>\n      <Route path={ROUTES.RESULT} exact>\n        <Result />\n      </Route>\n      <Route path={ROUTES.GAME} exact>\n        <Game />\n      </Route>\n      <Route path={ROUTES.MAIN} exact>\n        <InitGame />\n      </Route>\n    </Router>\n  );\n});\n\nRoutes.displayName = 'Routes';\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './Routes';\nimport './app.css';\n\nconst App = () => <Routes />;\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport gameReducer from './game';\n\nexport const store = configureStore({\n  reducer: {\n    game: gameReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoresContainer\":\"styles_scoresContainer__35zdf\",\"scoresContainer_wrapper\":\"styles_scoresContainer_wrapper__3sLHz\",\"scoresContainer_mainTitle\":\"styles_scoresContainer_mainTitle__1Suq8\",\"scoresContainer_lastGameInfoContainer_title\":\"styles_scoresContainer_lastGameInfoContainer_title__uZsYp\",\"scoresContainer_lastGameInfoContainer_info\":\"styles_scoresContainer_lastGameInfoContainer_info__4wTXG\",\"scoresContainer_lastGameInfoContainer_actions\":\"styles_scoresContainer_lastGameInfoContainer_actions__2gvul\",\"table\":\"styles_table__2oJzA\",\"tableRow\":\"styles_tableRow__ryQzm\",\"tableCell\":\"styles_tableCell__18xEL\"};"],"sourceRoot":""}