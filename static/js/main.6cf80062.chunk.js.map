{"version":3,"sources":["pages/Game/Card/styles.module.css","pages/Game/styles.module.css","pages/InitGame/styles.module.css","components/TextInput/styles.module.css","Template/styles.module.css","components/Button/styles.module.css","configs/index.js","Template/index.js","redux/game/index.js","components/Button/index.js","components/TextInput/index.js","pages/InitGame/index.js","utils/cards.js","pages/Game/Card/index.js","pages/Game/hooks/useGame.js","pages/Game/helpers.js","pages/Game/index.js","pages/Result/index.js","Routes/index.js","App.js","redux/store.js","index.js","pages/Result/styles.module.css"],"names":["module","exports","MAIN","GAME","RESULT","LOOSE","WIN","Template","memo","children","className","styles","mainSectionWrapper","displayName","propTypes","PropTypes","oneOfType","arrayOf","node","isRequired","initialState","userName","localStorage","getItem","scores","JSON","parse","lastScore","gameStatus","gameSlice","createSlice","name","reducers","setUsername","state","payload","addScores","addLastScore","setGameStatus","reset","actions","Button","props","onClick","disabled","restProps","clsx","button","defaultProps","Input","placeholder","value","onChange","inputContainer","input","type","inputPlaceholder","InitGame","storeUsername","useSelector","game","useState","username","dispatch","useDispatch","push","useHistory","ROUTES","CONFIG","handleChange","useCallback","target","handleClick","e","preventDefault","setUsernameAction","setItem","mainContainer","onSubmit","mainContainer_form","mainContainer_form_title","mainContainer_form_subtitle","mainContainer_form_actionWrapper","length","shuffle","array","randomIndex","currentIndex","Math","floor","random","getRandomIntInclusive","min","max","ceil","generateRandomValue","yMin","yMax","xMin","xMax","y","x","getRandomCard","cards","randomCard","includes","generateCards","randomCardsValues","Array","fill","havePair","isOpen","map","item","id","Card","showCards","cardDimension","height","width","split","cardContainer","opened","cardContainer_frontWrapper","cardContainer_front","style","backgroundSize","backgroundPosition","cardContainer_backWrapper","cardContainer_back","cardContainer_back_havePair","useGame","score","setScore","originalArray","copyOfOriginal","stringify","generateCardsWithPairs","setCards","GAME_STATUSES","isFinish","useMemo","openedCards","filter","Boolean","some","openedCard","find","getFilteredScores","status","allScores","slice","sort","a","b","handleFinishGame","every","filteredScores","handleCardClick","gameHandlerInit","cardId","cardValue","prevState","restData","prevValue","handleGame","useEffect","Game","setShowCards","ref","useRef","setCardDimensions","handleToggleCards","handleResize","cardContainerRef","current","querySelector","getBoundingClientRect","cardResizeHandler","window","addEventListener","removeEventListener","gameContainer","gameContainer_gameInfo","gameContainer_gameInfo_titleContainer","gameContainer_gameInfo_userInfo","gameContainer_actionsWrapper","gameContainer_cardsContainer","card","Result","handleRepeatClick","handleResetClick","removeItem","scoresContainer","scoresContainer_wrapper","scoresContainer_mainTitle","scoresContainer_lastGameInfoContainer","scoresContainer_lastGameInfoContainer_title","scoresContainer_lastGameInfoContainer_info","table","tableRow","tableCell","scoresContainer_lastGameInfoContainer_actions","Routes","basename","path","exact","App","store","configureStore","reducer","gameReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cf80062.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"styles_cardContainer__SLBDg\",\"opened\":\"styles_opened__dkW9Z\",\"havePair\":\"styles_havePair__1FRPg\",\"cardContainer_back_havePair\":\"styles_cardContainer_back_havePair__1Yd8t\",\"cardContainer_frontWrapper\":\"styles_cardContainer_frontWrapper__5oW-l\",\"cardContainer_backWrapper\":\"styles_cardContainer_backWrapper__1sw2e\",\"cardContainer_front\":\"styles_cardContainer_front__2s-GB\",\"cardContainer_back\":\"styles_cardContainer_back__3TqEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"styles_gameContainer__1Sl0y\",\"gameContainer_gameInfo_titleContainer\":\"styles_gameContainer_gameInfo_titleContainer__36g0Z\",\"gameContainer_gameInfo\":\"styles_gameContainer_gameInfo__3ddrQ\",\"gameContainer_gameInfo_userInfo\":\"styles_gameContainer_gameInfo_userInfo__37oWP\",\"gameContainer_actionsWrapper\":\"styles_gameContainer_actionsWrapper__1-yUE\",\"gameContainer_cardsContainer\":\"styles_gameContainer_cardsContainer__1pjPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"styles_mainContainer__3H92C\",\"mainContainer_form\":\"styles_mainContainer_form__2DYm2\",\"mainContainer_form_title\":\"styles_mainContainer_form_title__2xeCk\",\"mainContainer_form_subtitle\":\"styles_mainContainer_form_subtitle__25AJe\",\"mainContainer_form_actionWrapper\":\"styles_mainContainer_form_actionWrapper__10niC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__3VC5P\",\"input\":\"styles_input__26KIr\",\"inputPlaceholder\":\"styles_inputPlaceholder__22kHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSectionWrapper\":\"styles_mainSectionWrapper__tW_-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3Q1oU\"};","export default {\r\n  ROUTES: {\r\n    MAIN: '/',\r\n    GAME: '/game',\r\n    RESULT: '/result',\r\n  },\r\n  GAME_STATUSES: {\r\n    LOOSE: 'Loose',\r\n    WIN: 'WIN',\r\n  },\r\n};\r\n","import React, { memo } from 'react';\r\nimport styles from './styles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Template = memo(({ children }) => (\r\n  <section className={styles.mainSectionWrapper}>{children}</section>\r\n));\r\n\r\nTemplate.displayName = 'Template';\r\n\r\nTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Template;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  userName: localStorage.getItem('username') || '',\r\n  scores: JSON.parse(localStorage.getItem('allScores')) || [],\r\n  lastScore: 0,\r\n  gameStatus: '',\r\n};\r\n\r\nexport const gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    setUsername: (state, { payload }) => {\r\n      state.userName = payload;\r\n    },\r\n    addScores: (state, { payload }) => {\r\n      state.scores = payload;\r\n    },\r\n    addLastScore: (state, { payload }) => {\r\n      state.lastScore = payload;\r\n    },\r\n    setGameStatus: (state, { payload }) => {\r\n      state.gameStatus = payload;\r\n    },\r\n    reset: state => {\r\n      state.userName = '';\r\n      state.lastScore = 0;\r\n      state.gameStatus = '';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsername, addScores, addLastScore, setGameStatus, reset } =\r\n  gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './styles.module.css';\r\n\r\nconst Button = memo(props => {\r\n  const { children, onClick, className, disabled, ...restProps } = props;\r\n\r\n  return (\r\n    <button\r\n      className={clsx(styles.button, className)}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  className: null,\r\n  disabled: false,\r\n  onClick: () => {},\r\n};\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport default Button;\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\nconst Input = memo(props => {\r\n  const { placeholder, value, onChange } = props;\r\n\r\n  return (\r\n    <label className={styles.inputContainer}>\r\n      <input\r\n        className={styles.input}\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\" \"\r\n      />\r\n      <span className={styles.inputPlaceholder}>{placeholder}</span>\r\n    </label>\r\n  );\r\n});\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport default Input;\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport Template from '../../Template';\r\nimport styles from './styles.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUsername as setUsernameAction } from 'redux/game';\r\nimport { useHistory } from 'react-router';\r\nimport CONFIG from 'configs/index';\r\nimport Button from 'components/Button';\r\nimport Input from 'components/TextInput';\r\n\r\nconst InitGame = memo(() => {\r\n  const { userName: storeUsername } = useSelector(({ game }) => game);\r\n\r\n  const [username, setUsername] = useState(storeUsername);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { push } = useHistory();\r\n\r\n  const { ROUTES } = CONFIG;\r\n\r\n  const handleChange = useCallback(\r\n    ({ target: { value } }) => setUsername(value),\r\n    []\r\n  );\r\n\r\n  const handleClick = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n\r\n      dispatch(setUsernameAction(username));\r\n      localStorage.setItem('username', username);\r\n      push(ROUTES.GAME);\r\n    },\r\n    [ROUTES.GAME, dispatch, push, username]\r\n  );\r\n\r\n  return (\r\n    <Template>\r\n      <div className={styles.mainContainer}>\r\n        <form onSubmit={handleClick} className={styles.mainContainer_form}>\r\n          <h1 className={styles.mainContainer_form_title}>Find Pairs</h1>\r\n          <p className={styles.mainContainer_form_subtitle}>\r\n            You need to find 12 pairs of cards to win this game\r\n          </p>\r\n          <Input\r\n            onChange={handleChange}\r\n            value={username}\r\n            placeholder=\"Enter your username\"\r\n          />\r\n          <div className={styles.mainContainer_form_actionWrapper}>\r\n            <Button type=\"submit\" disabled={!username.length}>\r\n              start game\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Template>\r\n  );\r\n});\r\n\r\nInitGame.displayName = 'InitGame';\r\n\r\nexport default InitGame;\r\n","const shuffle = array => {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst getRandomIntInclusive = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n};\r\n\r\nconst generateRandomValue = ({ yMin = 0, yMax = 4, xMin = 0, xMax = 12 }) => {\r\n  const y = getRandomIntInclusive(yMin, yMax);\r\n  let x = getRandomIntInclusive(xMin, xMax);\r\n\r\n  if (y === 4) {\r\n    x = getRandomIntInclusive(0, 1);\r\n  }\r\n\r\n  return `${x},${y}`;\r\n};\r\n\r\nconst getRandomCard = (length = 12) => {\r\n  let cards = [];\r\n\r\n  while (length) {\r\n    let randomCard = generateRandomValue({});\r\n\r\n    if (!cards.includes(randomCard)) {\r\n      cards = [...cards, randomCard];\r\n      length--;\r\n    }\r\n  }\r\n\r\n  return cards;\r\n};\r\n\r\nconst generateCards = (length = 12) => {\r\n  const randomCardsValues = getRandomCard();\r\n\r\n  return Array(length)\r\n    .fill({ havePair: false, isOpen: false, value: '' })\r\n    .map((item, id) => ({ ...item, id, value: randomCardsValues[id] }));\r\n};\r\n\r\nexport const generateCardsWithPairs = (length = 12) => {\r\n  const originalArray = generateCards(length);\r\n  const copyOfOriginal = JSON.parse(JSON.stringify(originalArray));\r\n\r\n  return shuffle(\r\n    [...originalArray, ...copyOfOriginal].map((item, id) => ({ ...item, id }))\r\n  );\r\n};\r\n\r\nexport const cardResizeHandler = ({\r\n  cardContainerRef = null,\r\n  setCardDimensions: setCardDimensions = () => {},\r\n}) => {\r\n  if (cardContainerRef.current) {\r\n    const { current: cardContainer } = cardContainerRef;\r\n\r\n    const card = cardContainer.querySelector('.cardContainer');\r\n\r\n    const { width, height } = card.getBoundingClientRect();\r\n\r\n    setCardDimensions({ width, height });\r\n  }\r\n};\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\nimport clsx from 'clsx';\r\n\r\nconst Card = memo(props => {\r\n  const {\r\n    havePair,\r\n    isOpen,\r\n    value,\r\n    id,\r\n    onClick,\r\n    showCards,\r\n    cardDimension: { height, width },\r\n  } = props;\r\n\r\n  const handleClick = () => onClick({ id, value, isOpen });\r\n\r\n  const [x, y] = value.split(',');\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.cardContainer,\r\n        isOpen && styles.opened,\r\n        havePair && styles.havePair\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      <div className={styles.cardContainer_frontWrapper}>\r\n        <div\r\n          className={clsx(styles.cardContainer_front, 'cardContainer')}\r\n          style={{\r\n            backgroundSize: `calc(${width}px * 13) calc(${height}px * 5)`,\r\n            backgroundPosition: `calc(${width}px * -${\r\n              showCards ? x : 2\r\n            }) calc(${height}px * -${showCards ? y : 4})`,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.cardContainer_backWrapper}>\r\n        <div\r\n          className={styles.cardContainer_back}\r\n          style={{\r\n            backgroundSize: `calc(${width}px * 13) calc(${height}px * 5)`,\r\n            backgroundPosition: `calc(${width}px * -${x}) calc(${height}px * -${y})`,\r\n          }}\r\n        >\r\n          <div className={styles.cardContainer_back_havePair}>\r\n            <span>Have pair</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nCard.displayName = 'Card';\r\n\r\nCard.propTypes = {\r\n  havePair: PropTypes.bool.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  cardDimension: PropTypes.shape({\r\n    height: PropTypes.number,\r\n    width: PropTypes.number,\r\n  }).isRequired,\r\n  showCards: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport CONFIG from 'configs';\r\nimport { generateCardsWithPairs } from 'utils/cards';\r\nimport { handleGame } from '../helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setGameStatus, addLastScore, addScores } from 'redux/game';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport const useGame = () => {\r\n  const [score, setScore] = useState(0);\r\n  const [cards, setCards] = useState(generateCardsWithPairs());\r\n\r\n  const { scores, userName } = useSelector(({ game }) => game);\r\n\r\n  const { GAME_STATUSES, ROUTES } = CONFIG;\r\n\r\n  const { push } = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isFinish = useMemo(() => {\r\n    const openedCards = cards.filter(({ isOpen }) => isOpen);\r\n\r\n    return Boolean(\r\n      (openedCards.length % 2 === 0 &&\r\n        openedCards.some(({ havePair }) => !havePair)) ||\r\n        openedCards.length === cards.length\r\n    );\r\n  }, [cards]);\r\n\r\n  const openedCard = useMemo(\r\n    () =>\r\n      cards.find(\r\n        ({ havePair, isOpen }) => havePair === false && isOpen === true\r\n      ),\r\n    [cards]\r\n  );\r\n\r\n  const getFilteredScores = useCallback(\r\n    status => {\r\n      let allScores = scores;\r\n      if (scores.length === 10) {\r\n        allScores = scores.slice(0, -1);\r\n      }\r\n\r\n      return [...allScores, { score, userName, gameStatus: status }]\r\n        .map((item, id) => ({\r\n          ...item,\r\n          id,\r\n        }))\r\n        .sort((a, b) => b.score - a.score);\r\n    },\r\n    [scores, score, userName]\r\n  );\r\n\r\n  const handleFinishGame = useCallback(() => {\r\n    let status = GAME_STATUSES.LOOSE;\r\n\r\n    if (cards.every(({ havePair }) => havePair)) {\r\n      status = GAME_STATUSES.WIN;\r\n    }\r\n\r\n    const filteredScores = getFilteredScores(status);\r\n\r\n    localStorage.setItem('allScores', JSON.stringify(filteredScores));\r\n\r\n    dispatch(setGameStatus(status));\r\n    dispatch(addLastScore(score));\r\n    dispatch(addScores(filteredScores));\r\n\r\n    push(ROUTES.RESULT);\r\n  }, [\r\n    GAME_STATUSES.LOOSE,\r\n    GAME_STATUSES.WIN,\r\n    ROUTES.RESULT,\r\n    cards,\r\n    dispatch,\r\n    getFilteredScores,\r\n    push,\r\n    score,\r\n  ]);\r\n\r\n  const handleCardClick = useCallback(\r\n    ({ id, value, isOpen }) => {\r\n      if (isOpen) return;\r\n\r\n      const gameHandlerInit = handleGame({\r\n        cardId: id,\r\n        cardValue: value,\r\n        setScore,\r\n        openedCard,\r\n      });\r\n\r\n      setCards(gameHandlerInit);\r\n    },\r\n    [openedCard]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isFinish) {\r\n      handleFinishGame();\r\n    }\r\n  }, [handleFinishGame, isFinish]);\r\n\r\n  return { handleCardClick, cards, score };\r\n};\r\n","export const handleGame =\r\n  ({ cardId, cardValue, setScore, openedCard }) =>\r\n  prevState =>\r\n    prevState.map(({ id, value, ...restData }) => {\r\n      if (openedCard && openedCard.value === cardValue && id === cardId) {\r\n        setScore(prevValue => prevValue + 1);\r\n      }\r\n\r\n      if (\r\n        openedCard &&\r\n        openedCard.value === cardValue &&\r\n        (id === cardId || openedCard.id === id)\r\n      ) {\r\n        return {\r\n          id,\r\n          value,\r\n          ...restData,\r\n          isOpen: true,\r\n          havePair: true,\r\n        };\r\n      }\r\n\r\n      if (id === cardId) {\r\n        return {\r\n          id,\r\n          value,\r\n          ...restData,\r\n          isOpen: true,\r\n        };\r\n      }\r\n\r\n      return { id, value, ...restData };\r\n    });\r\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport styles from './styles.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport Template from 'Template/index';\r\nimport { useHistory } from 'react-router';\r\nimport CONFIG from 'configs';\r\nimport { cardResizeHandler } from 'utils/cards';\r\nimport Card from './Card';\r\nimport { useGame } from './hooks/useGame';\r\nimport Button from 'components/Button';\r\n\r\nconst Game = memo(() => {\r\n  const { userName } = useSelector(({ game }) => game);\r\n\r\n  const [showCards, setShowCards] = useState(false);\r\n\r\n  const ref = useRef();\r\n\r\n  const { push } = useHistory();\r\n\r\n  const { ROUTES } = CONFIG;\r\n\r\n  const [cardDimension, setCardDimensions] = useState({ height: 0, width: 0 });\r\n\r\n  const { handleCardClick, cards, score } = useGame();\r\n\r\n  const handleToggleCards = useCallback(\r\n    () => setShowCards(prevValue => !prevValue),\r\n    []\r\n  );\r\n\r\n  const renderCard = card => (\r\n    <Card\r\n      key={card.id}\r\n      {...card}\r\n      onClick={handleCardClick}\r\n      cardDimension={cardDimension}\r\n      showCards={showCards}\r\n    />\r\n  );\r\n\r\n  const handleResize = () =>\r\n    cardResizeHandler({ cardContainerRef: ref, setCardDimensions });\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  if (!userName.length) {\r\n    push(ROUTES.MAIN);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Template>\r\n      <div className={styles.gameContainer}>\r\n        <div className={styles.gameContainer_gameInfo}>\r\n          <div className={styles.gameContainer_gameInfo_titleContainer}>\r\n            <h1>Find Pairs</h1>\r\n          </div>\r\n          <p>You need to find 12 pairs of cards to win this game</p>\r\n          <div className={styles.gameContainer_gameInfo_userInfo}>\r\n            <span>USER NAME: {userName}</span>\r\n            <span>SCORE: {score}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.gameContainer_actionsWrapper}>\r\n          <Button onClick={handleToggleCards}>show cards</Button>\r\n        </div>\r\n        <div className={styles.gameContainer_cardsContainer} ref={ref}>\r\n          {cards.map(renderCard)}\r\n        </div>\r\n      </div>\r\n    </Template>\r\n  );\r\n});\r\n\r\nGame.displayName = 'Game';\r\n\r\nexport default Game;\r\n","import React, { memo, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Template from 'Template';\r\nimport styles from './styles.module.css';\r\nimport { useHistory } from 'react-router';\r\nimport CONFIG from 'configs';\r\nimport { reset } from 'redux/game';\r\nimport Button from 'components/Button';\r\n\r\nconst Result = memo(() => {\r\n  const { userName, scores, lastScore, gameStatus } = useSelector(\r\n    ({ game }) => game\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { push } = useHistory();\r\n\r\n  const { ROUTES } = CONFIG;\r\n\r\n  const handleRepeatClick = useCallback(() => {\r\n    push(ROUTES.GAME);\r\n  }, [ROUTES.GAME, push]);\r\n\r\n  const handleResetClick = useCallback(() => {\r\n    localStorage.removeItem('username');\r\n\r\n    dispatch(reset());\r\n\r\n    push(ROUTES.MAIN);\r\n  }, [ROUTES.MAIN, dispatch, push]);\r\n\r\n  return (\r\n    <Template>\r\n      <section className={styles.scoresContainer}>\r\n        <div className={styles.scoresContainer_wrapper}>\r\n          <h1 className={styles.scoresContainer_mainTitle}>Scores table</h1>\r\n          {Boolean(gameStatus.length) && (\r\n            <div className={styles.scoresContainer_lastGameInfoContainer}>\r\n              <h2\r\n                className={styles.scoresContainer_lastGameInfoContainer_title}\r\n              >\r\n                {gameStatus}\r\n              </h2>\r\n              <div\r\n                className={styles.scoresContainer_lastGameInfoContainer_info}\r\n              >\r\n                <p>Username: {userName}</p>\r\n                <p>score: {lastScore}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className={styles.table}>\r\n            {scores.map(({ score, userName, gameStatus, id }) => (\r\n              <div className={styles.tableRow} key={id}>\r\n                <div className={styles.tableCell}>{userName}</div>\r\n                <div className={styles.tableCell}>{gameStatus}</div>\r\n                <div className={styles.tableCell}>{score}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={styles.scoresContainer_lastGameInfoContainer_actions}>\r\n            <Button onClick={handleResetClick}>Reset</Button>\r\n            <Button onClick={handleRepeatClick}>Repeat</Button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Template>\r\n  );\r\n});\r\n\r\nResult.displayName = 'Result';\r\n\r\nexport default Result;\r\n","import React, { memo } from 'react';\r\nimport CONFIG from 'configs/index';\r\nimport { HashRouter  as Router, Route } from 'react-router-dom';\r\nimport InitGame from 'pages/InitGame';\r\nimport Game from 'pages/Game';\r\nimport Result from 'pages/Result';\r\n\r\nconst Routes = memo(() => {\r\n  const { ROUTES } = CONFIG;\r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Route path={ROUTES.RESULT} exact>\r\n        <Result />\r\n      </Route>\r\n      <Route path={ROUTES.GAME} exact>\r\n        <Game />\r\n      </Route>\r\n      <Route path={ROUTES.MAIN} exact>\r\n        <InitGame />\r\n      </Route>\r\n    </Router>\r\n  );\r\n});\r\n\r\nRoutes.displayName = 'Routes';\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from './Routes';\r\nimport './app.css';\r\n\r\nconst App = () => <Routes />;\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport gameReducer from './game';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoresContainer\":\"styles_scoresContainer__1e26Z\",\"scoresContainer_wrapper\":\"styles_scoresContainer_wrapper__i5_73\",\"scoresContainer_mainTitle\":\"styles_scoresContainer_mainTitle__1OAqw\",\"scoresContainer_lastGameInfoContainer_title\":\"styles_scoresContainer_lastGameInfoContainer_title__1_CAu\",\"scoresContainer_lastGameInfoContainer_info\":\"styles_scoresContainer_lastGameInfoContainer_info__Wp1y0\",\"scoresContainer_lastGameInfoContainer_actions\":\"styles_scoresContainer_lastGameInfoContainer_actions__3I8TM\",\"table\":\"styles_table__3puuO\",\"tableRow\":\"styles_tableRow__-KgjW\",\"tableCell\":\"styles_tableCell__3qgnV\"};"],"sourceRoot":""}